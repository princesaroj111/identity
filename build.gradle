buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://repo1.maven.org/maven2/" }
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'maven-publish'
	id 'org.jetbrains.kotlin.jvm' version '1.6.10'
	id 'jacoco'
	id 'java'
}


// Gradle doesn't allow these at the top of the file - go figure?
def jarDomainId = "id"
def jarGroupId = "trinsic"
def jarArtifactId = "services"
def jarVersion = "1.8.0"

//apply plugin: 'org.springframework.boot'
apply plugin: 'kotlin'



group = jarDomainId + "." + jarGroupId + '.' + jarArtifactId
archivesBaseName = 'trinsic-' + jarArtifactId
version = jarVersion

// urlFileSample() {
def urlFile = { url, name ->
	File file = new File("$buildDir/download/${name}")
	file.parentFile.mkdirs()
	if (!file.exists()) {
		new URL(url).withInputStream { downloadStream ->
			file.withOutputStream { fileOut ->
				fileOut << downloadStream
			}
		}
	}
	files(file.absolutePath)
}
// }

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.projectlombok:lombok:1.18.22'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.jetbrains:annotations:23.0.0'
	implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.21.7'
	implementation 'com.google.protobuf:protobuf-java-util:3.21.7'
	implementation group: 'net.java.dev.jna', name: 'jna', version: '5.12.1'
	implementation 'io.grpc:grpc-kotlin-stub:1.3.0'
	implementation 'io.grpc:grpc-protobuf:1.49.2'
	implementation 'com.google.protobuf:protobuf-kotlin:3.21.7'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'

	implementation 'io.leonard:base58:0.0.2'
	implementation 'io.grpc:grpc-netty-shaded:1.49.2'
	implementation 'io.grpc:grpc-protobuf:1.49.2'
	// This has to match the version of protoc-gen-grpc-java used in `sdk/devops/generate_proto_files.py`
	implementation 'io.grpc:grpc-stub:1.49.2'
	implementation urlFile('https://github.com/trinsic-id/okapi/releases/download/v1.6.0/trinsic-okapi-1.6.2.jar', 'trinsic-okapi-1.6.2.jar')
	implementation urlFile('https://github.com/trinsic-id/sdk/releases/download/v1.8.0/trinsic-services-1.8.1.jar', 'trinsic-services-1.8.1.jar')
//    implementation files("C:\\work\\okapi\\java\\build\\libs\\trinsic-okapi-1.6.1.jar")
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	archiveBaseName.set(getArchivesBaseName())
	archiveVersion.set(jarVersion)
}

compileTestKotlin {
	kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

compileKotlin {
	compileKotlin.destinationDirectory = compileJava.destinationDirectory
	kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

repositories {
	mavenCentral()
}
